/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ApiResponse: {
            /** @description Indicates if the request was successful */
            success: boolean;
            /** @description Response data */
            data?: Record<string, never> | null;
            /** @description Response message */
            message?: string | null;
            /** @description Error message if request failed */
            error?: string | null;
        };
        User: {
            /** @description User unique identifier */
            id: number;
            /** @description User username */
            username: string;
            /**
             * Format: email
             * @description User email address
             */
            email: string;
            /** @description User first name */
            first_name: string;
            /** @description User last name */
            last_name: string;
            /** @description User account status */
            is_active?: boolean;
            /** @description Super admin status */
            is_super_admin?: boolean;
            /**
             * Format: date-time
             * @description Last login date
             */
            last_login?: string | null;
            /**
             * Format: date-time
             * @description Account creation date
             */
            created_at?: string;
            /**
             * Format: date-time
             * @description Last update date
             */
            updated_at?: string;
        };
        Role: {
            /** @description Role ID */
            id?: number;
            /** @description Role name */
            name: string;
            /** @description Role slug */
            slug: string;
            /** @description Role description */
            description?: string;
            /** @description Whether role is active */
            is_active?: boolean;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        Permission: {
            /** @description Permission ID */
            id?: number;
            /** @description Permission name */
            name: string;
            /** @description Permission slug */
            slug: string;
            /** @description Permission description */
            description?: string;
            /** @description Module name */
            module?: string;
            /** @description Whether permission is active */
            is_active?: boolean;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        RolePermission: {
            /** @description Role Permission ID */
            id?: number;
            /** @description Role ID */
            role_id: number;
            /** @description Permission ID */
            permission_id: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
            role?: components["schemas"]["Role"];
            permission?: components["schemas"]["Permission"];
        };
        UserRole: {
            /** @description User Role ID */
            id?: number;
            /** @description User ID */
            user_id: number;
            /** @description Role ID */
            role_id: number;
            /** Format: date-time */
            assigned_at?: string;
            /** @description ID of user who assigned the role */
            assigned_by?: number;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
            user?: {
                id?: number;
                username?: string;
                email?: string;
                first_name?: string;
                last_name?: string;
            };
            role?: components["schemas"]["Role"];
        };
        Product: {
            /** @description Product unique identifier */
            id: string;
            /** @description Product name */
            name: string;
            /** @description Product description */
            description?: string | null;
            /** @description Product SKU */
            sku: string;
            /**
             * Format: decimal
             * @description Product price
             */
            price: number;
            /** @description Category ID */
            categoryId?: string | null;
            /** @description Family ID */
            familyId?: string | null;
            /** @description Brand ID */
            brandId?: string | null;
            /** @description Unit ID */
            unitId?: string | null;
            /** @description Product status */
            isActive?: boolean;
            /**
             * Format: date-time
             * @description Product creation date
             */
            createdAt?: string;
            /**
             * Format: date-time
             * @description Last update date
             */
            updatedAt?: string;
        };
        Category: {
            /** @description Category unique identifier */
            id: string;
            /** @description Category name */
            name: string;
            /** @description Category description */
            description?: string | null;
            /** @description Category status */
            isActive?: boolean;
            /**
             * Format: date-time
             * @description Category creation date
             */
            createdAt?: string;
            /**
             * Format: date-time
             * @description Last update date
             */
            updatedAt?: string;
        };
        Brand: {
            /** @description Brand unique identifier */
            id: string;
            /** @description Brand name */
            name: string;
            /** @description Brand description */
            description?: string | null;
            /** @description Brand status */
            isActive?: boolean;
            /**
             * Format: date-time
             * @description Brand creation date
             */
            createdAt?: string;
            /**
             * Format: date-time
             * @description Last update date
             */
            updatedAt?: string;
        };
        Warehouse: {
            /** @description Warehouse unique identifier */
            warehouse_id: string;
            /** @description Warehouse name */
            warehouse_name: string;
            /** @description Unique warehouse code */
            warehouse_code?: string;
            /** @description Warehouse address */
            address?: string | null;
            /** @description City */
            city?: string | null;
            /** @description State/Province */
            state?: string | null;
            /** @description Country */
            country?: string | null;
            /** @description Postal code */
            postal_code?: string | null;
            /** @description Contact person name */
            contact_person?: string | null;
            /**
             * Format: email
             * @description Contact email
             */
            contact_email?: string | null;
            /** @description Contact phone */
            contact_phone?: string | null;
            /**
             * Format: decimal
             * @description Total warehouse area
             */
            total_area?: number | null;
            /** @description Unit of area measurement */
            area_unit?: string | null;
            /** @description Storage capacity */
            storage_capacity?: number | null;
            /** @description Type of warehouse */
            warehouse_type?: string | null;
            /**
             * @description Temperature controlled facility
             * @default false
             */
            temperature_controlled: boolean;
            /**
             * @description Current operational status
             * @default operational
             * @enum {string}
             */
            operational_status: "operational" | "maintenance" | "closed";
            /**
             * @description Warehouse active status
             * @default true
             */
            is_active: boolean;
            /**
             * Format: date-time
             * @description Creation timestamp
             */
            created_at?: string;
            /**
             * Format: date-time
             * @description Last update timestamp
             */
            updated_at?: string;
        };
        WarehouseZone: {
            /** @description Zone unique identifier */
            zone_id: string;
            /** @description Warehouse ID */
            warehouse_id: string;
            /** @description Zone name */
            zone_name: string;
            /** @description Unique zone code */
            zone_code: string;
            /**
             * @description Type of zone
             * @enum {string}
             */
            zone_type: "receiving" | "shipping" | "storage" | "picking" | "packing" | "staging";
            /** @description Zone description */
            description?: string | null;
            /**
             * Format: decimal
             * @description Zone area
             */
            area?: number | null;
            /** @description Zone capacity */
            capacity?: number | null;
            /**
             * Format: double
             * @description X coordinate of zone center
             */
            center_x: number;
            /**
             * Format: double
             * @description Y coordinate of zone center
             */
            center_y: number;
            /**
             * @description Temperature controlled zone
             * @default false
             */
            temperature_controlled: boolean;
            /**
             * @description Zone status
             * @default operational
             * @enum {string}
             */
            status: "operational" | "maintenance" | "blocked";
            /**
             * @description Zone active status
             * @default true
             */
            is_active: boolean;
            /**
             * Format: date-time
             * @description Creation timestamp
             */
            created_at?: string;
            /**
             * Format: date-time
             * @description Last update timestamp
             */
            updated_at?: string;
        };
        WarehouseAisle: {
            /** @description Aisle unique identifier */
            aisle_id: string;
            /** @description Zone ID */
            zone_id: string;
            /** @description Aisle name */
            aisle_name: string;
            /** @description Unique aisle code */
            aisle_code: string;
            /** @description Aisle description */
            description?: string | null;
            /**
             * Format: decimal
             * @description Aisle length
             */
            length?: number | null;
            /**
             * Format: decimal
             * @description Aisle width
             */
            width?: number | null;
            /**
             * Format: decimal
             * @description Aisle height
             */
            height?: number | null;
            /** @description Aisle capacity */
            capacity?: number | null;
            /**
             * Format: double
             * @description X coordinate of aisle start
             */
            start_x: number;
            /**
             * Format: double
             * @description Y coordinate of aisle start
             */
            start_y: number;
            /**
             * Format: double
             * @description X coordinate of aisle end
             */
            end_x: number;
            /**
             * Format: double
             * @description Y coordinate of aisle end
             */
            end_y: number;
            /**
             * @description Aisle status
             * @default operational
             * @enum {string}
             */
            status: "operational" | "blocked";
            /**
             * @description Aisle active status
             * @default true
             */
            is_active: boolean;
            /**
             * Format: date-time
             * @description Creation timestamp
             */
            created_at?: string;
            /**
             * Format: date-time
             * @description Last update timestamp
             */
            updated_at?: string;
        };
        WarehouseRack: {
            /** @description Rack unique identifier */
            rack_id: string;
            /** @description Aisle ID */
            aisle_id: string;
            /** @description Rack name */
            rack_name: string;
            /** @description Unique rack code */
            rack_code: string;
            /**
             * @description Type of rack
             * @enum {string|null}
             */
            rack_type?: "pallet" | "shelving" | "cantilever" | "drive-in" | null;
            /** @description Rack description */
            description?: string | null;
            /** @description Total number of levels in rack */
            total_levels: number;
            /**
             * Format: double
             * @description X coordinate of rack center
             */
            center_x: number;
            /**
             * Format: double
             * @description Y coordinate of rack center
             */
            center_y: number;
            /**
             * @description Rack status
             * @default operational
             * @enum {string}
             */
            status: "operational" | "maintenance";
            /**
             * @description Rack active status
             * @default true
             */
            is_active: boolean;
            /**
             * Format: date-time
             * @description Creation timestamp
             */
            created_at?: string;
            /**
             * Format: date-time
             * @description Last update timestamp
             */
            updated_at?: string;
        };
        WarehouseLevel: {
            /** @description Level unique identifier */
            level_id: string;
            /** @description Rack ID */
            rack_id: string;
            /** @description Level name */
            level_name: string;
            /** @description Unique level code */
            level_code: string;
            /** @description Level number within rack */
            level_number: number;
            /** @description Level capacity */
            capacity?: number | null;
            /**
             * @description Level status
             * @default operational
             * @enum {string}
             */
            status: "operational" | "blocked";
            /**
             * @description Level active status
             * @default true
             */
            is_active: boolean;
            /**
             * Format: date-time
             * @description Creation timestamp
             */
            created_at?: string;
            /**
             * Format: date-time
             * @description Last update timestamp
             */
            updated_at?: string;
        };
        WarehouseLocation: {
            /** @description Location unique identifier */
            location_id: string;
            /** @description Level ID */
            level_id: string;
            /** @description Location name */
            location_name: string;
            /** @description Unique location code */
            location_code: string;
            /**
             * @description Type of location
             * @enum {string|null}
             */
            location_type?: "picking" | "storage" | "bulk" | "returns" | null;
            /** @description Location barcode */
            barcode?: string | null;
            /**
             * @description Location priority for picking
             * @enum {string|null}
             */
            location_priority?: "HIGH" | "MEDIUM" | "LOW" | null;
            /**
             * @description Location status
             * @default available
             * @enum {string}
             */
            status: "available" | "occupied" | "reserved" | "blocked";
            /**
             * @description Location active status
             * @default true
             */
            is_active: boolean;
            /**
             * Format: date-time
             * @description Creation timestamp
             */
            created_at?: string;
            /**
             * Format: date-time
             * @description Last update timestamp
             */
            updated_at?: string;
        };
        Inventory: {
            /** @description Inventory unique identifier */
            inventory_id: string;
            /** @description Product ID */
            product_id: string;
            /** @description Location ID */
            location_id: string;
            /**
             * Format: decimal
             * @description Current quantity
             */
            quantity: number;
            /** @description Unit of measure ID */
            uom_id: string;
            /** @description Lot number for batch tracking */
            lot_number?: string | null;
            /** @description Serial number for individual tracking */
            serial_number?: string | null;
            /**
             * Format: date
             * @description Expiry date
             */
            expiry_date?: string | null;
            /**
             * @description Inventory status
             * @default available
             * @enum {string}
             */
            status: "available" | "reserved" | "damaged" | "expired" | "quarantine";
            /**
             * @description Inventory active status
             * @default true
             */
            is_active: boolean;
            /**
             * Format: date-time
             * @description Creation timestamp
             */
            created_at?: string;
            /**
             * Format: date-time
             * @description Last update timestamp
             */
            updated_at?: string;
        };
        InventoryMovement: {
            /** @description Movement unique identifier */
            movement_id: string;
            /** @description Inventory ID */
            inventory_id: string;
            /** @description Source location ID */
            source_location_id?: string | null;
            /** @description Destination location ID */
            destination_location_id?: string | null;
            /**
             * Format: decimal
             * @description Moved quantity
             */
            quantity: number;
            /**
             * @description Type of movement
             * @enum {string}
             */
            movement_type: "inbound" | "outbound" | "transfer" | "adjustment" | "cycle_count";
            /** @description Reason for movement */
            movement_reason?: string | null;
            /**
             * @description Approval status
             * @default pending
             * @enum {string}
             */
            approval_status: "pending" | "approved" | "rejected";
            /**
             * Format: date-time
             * @description Movement date
             */
            movement_date?: string;
            /**
             * Format: date-time
             * @description Creation timestamp
             */
            created_at?: string;
        };
        BinType: {
            /** @description Bin type unique identifier */
            type_id: string;
            /** @description Bin type code */
            type_code: string;
            /** @description Bin type name */
            type_name: string;
            /** @description Bin type description */
            description?: string | null;
            /**
             * Format: decimal
             * @description Standard length in cm
             */
            standard_length: number;
            /**
             * Format: decimal
             * @description Standard width in cm
             */
            standard_width: number;
            /**
             * Format: decimal
             * @description Standard height in cm
             */
            standard_height: number;
            /**
             * Format: decimal
             * @description Maximum payload in kg
             */
            max_payload: number;
            /** @description Material type */
            material: string;
            /**
             * @description Can be stacked
             * @default true
             */
            is_stackable: boolean;
            /**
             * @description Bin type active status
             * @default true
             */
            is_active: boolean;
            /**
             * Format: date-time
             * @description Creation timestamp
             */
            created_at?: string;
            /**
             * Format: date-time
             * @description Last update timestamp
             */
            updated_at?: string;
        };
        Bin: {
            /** @description Bin unique identifier */
            bin_id: string;
            /** @description Bin barcode */
            bin_barcode?: string | null;
            /** @description Bin name */
            bin_name?: string | null;
            /** @description Current location ID */
            current_location_id?: string | null;
            /** @description Bin type ID */
            bin_type?: string | null;
            /**
             * @description Bin status
             * @default available
             * @enum {string}
             */
            bin_status: "available" | "occupied" | "disabled" | "maintenance" | "missing";
            /**
             * @description Bin active status
             * @default true
             */
            is_active: boolean;
            /**
             * Format: date-time
             * @description Creation timestamp
             */
            created_at?: string;
            /**
             * Format: date-time
             * @description Last update timestamp
             */
            updated_at?: string;
        };
        Error: {
            /** @example false */
            success: boolean;
            data?: null | null;
            /** @description Error message */
            message: string;
            /** @description Detailed error information */
            error?: string | null;
        };
    };
    responses: {
        /** @description Successful operation */
        Success: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ApiResponse"];
            };
        };
        /** @description Bad request */
        BadRequest: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "success": false,
                 *       "data": null,
                 *       "message": "Bad request",
                 *       "error": "Invalid input data"
                 *     } */
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description Unauthorized access */
        Unauthorized: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "success": false,
                 *       "data": null,
                 *       "message": "Unauthorized",
                 *       "error": "Authentication required"
                 *     } */
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description Forbidden access */
        Forbidden: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "success": false,
                 *       "data": null,
                 *       "message": "Forbidden",
                 *       "error": "Insufficient permissions"
                 *     } */
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description Resource not found */
        NotFound: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "success": false,
                 *       "data": null,
                 *       "message": "Not found",
                 *       "error": "Resource not found"
                 *     } */
                "application/json": components["schemas"]["Error"];
            };
        };
        /** @description Internal server error */
        InternalServerError: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                /** @example {
                 *       "success": false,
                 *       "data": null,
                 *       "message": "Internal server error",
                 *       "error": "An unexpected error occurred"
                 *     } */
                "application/json": components["schemas"]["Error"];
            };
        };
    };
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
